
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

model User {
    username String @id
    email String @unique
    createdAt DateTime @default(now())
    tasks UserTask[]
    exp Int @default(0)
}

model Task {
    id Int @id @default(autoincrement())
    title String
    description String?
    type TaskType @default(CORE)
    users UserTask[]
}

model UserTask { //many to many between user and task
    id Int @id @default(autoincrement()) // TODO: change this to slugify username and task title
    username String
    user User @relation(fields: [username], references: [username])
    taskId Int
    task Task @relation(fields: [taskId], references:[id])
    schedule Int @default(1) // represents every X days, 1 == daily, 7 == weekly, etc. TODO: 0 can be "anytime"?
    assignments Assignment[]
    difficulty Int @default(3)
}

model Assignment {
    id Int @id @default(autoincrement())
    userTaskId Int
    userTask UserTask @relation(fields: [userTaskId], references: [id])
    assignedAt DateTime @default(now())
    completedAt DateTime?
    cancelledAt DateTime?
    lastPostponedAt DateTime?
    pointValue Int?
    numPostponements Int @default(0)
    status AssignmentStatus @default(PENDING)
    isCurrent Boolean @default(false)
}

enum TaskType {
    CORE
    PERSONAL
}

// enum Schedule {
//     EVERYDAY
//     EVERYWEEK
//     EVERYMONTH
// }

enum AssignmentStatus {
    COMPLETED
    PENDING
    CANCELLED
    EXPIRED
}